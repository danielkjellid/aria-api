# Generated by Django 4.1.3 on 2023-01-05 16:16

from django.db import migrations
from django.db.migrations.operations import RunPython
from django.utils import timezone


def backfill_materials_and_rooms(apps, schema_editor):
    """
    Copy the Materials and Rooms enum instance from the product app into the Material
    and Room model in the product_attributes app.
    """

    Material = apps.get_model("product_attributes", "Material")
    Room = apps.get_model("product_attributes", "Room")

    material_array_field_mapping = [
        {"name": "Kompositt", "value": "kompositt"},
        {"name": "DADOkvarts", "value": "dado kvarts"},
        {"name": "Rustfritt stål", "value": "rustfritt stål"},
        {"name": "Pusset stål", "value": "pusset stål"},
        {"name": "Metall", "value": "metall"},
        {"name": "Tre", "value": "tre"},
        {"name": "Laminat", "value": "laminat"},
        {"name": "Glass", "value": "glass"},
        {"name": "Marmor", "value": "marmor"},
    ]

    materials_to_create = []

    for material in material_array_field_mapping:
        for key, value in material.items():
            if key == "name":
                materials_to_create.append(
                    Material(
                        name=value,
                        created_at=timezone.now(),
                        updated_at=timezone.now(),
                    )
                )

    Material.objects.bulk_create(materials_to_create)

    rooms_array_field_mapping = [
        {"name": "Bad", "value": "badrom"},
        {"name": "Kjøkken", "value": "kjøkken"},
        {"name": "Stue, gang og oppholdsrom", "value": "stue gang oppholdsrom"},
        {"name": "Uterom", "value": "uterom"},
    ]

    rooms_to_create = []

    for room in rooms_array_field_mapping:
        for key, value in room.items():
            if key == "name":
                rooms_to_create.append(
                    Room(
                        name=value,
                        created_at=timezone.now(),
                        updated_at=timezone.now(),
                    )
                )

    Room.objects.bulk_create(rooms_to_create)


class Migration(migrations.Migration):

    atomic = True

    dependencies = [
        ("product_attributes", "0004_material_room"),
        ("products", "0016_product_new_materials_product_new_rooms_and_more"),
    ]

    operations = [RunPython(backfill_materials_and_rooms, RunPython.noop)]
