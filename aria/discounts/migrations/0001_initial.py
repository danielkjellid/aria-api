# Generated by Django 4.0.6 on 2022-08-02 18:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0007_alter_product_materials_alter_product_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(null=True)),
                ('minimum_quantity', models.PositiveIntegerField(blank=True, help_text='The minimum product quantity for the discount to apply per orderline.E.g. take 3, pay for 2, the minimum quantity would be 3.', null=True)),
                ('maximum_quantity', models.PositiveIntegerField(blank=True, help_text='The maximum product quantity the discount applies to per orderlineE.g. max amount of 10 items per customer.', null=True)),
                ('discount_gross_price', models.DecimalField(blank=True, decimal_places=2, help_text='Override the gross retail price of products if set.', max_digits=10, null=True)),
                ('discount_gross_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Override the gross price of the product by this percent. E.g. 0.25 for 25% discount.', max_digits=10, null=True)),
                ('maximum_sold_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='The maximum number of product discounts given before the discount is ended automatically.', max_digits=10, null=True)),
                ('total_sold_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='The amount of products this discount has been applied to.', max_digits=10, null=True)),
                ('display_maximum_quantity', models.BooleanField(default=False, help_text='Display information telling customers about maximum quantity.')),
                ('active_at', models.DateTimeField(blank=True, help_text='When the discount should be active from. Leave empty to activate immediately.', null=True, verbose_name='Time when discount is active from')),
                ('active_to', models.DateTimeField(blank=True, help_text='When the discount should end. Leave emtpy to apply discount indefinitely.', null=True, verbose_name='Time when discount is active to')),
                ('ordering', models.IntegerField(help_text='Used to order product discounts. If unset, product discounts will be ordered by the time of creation.', null=True)),
                ('products', models.ManyToManyField(blank=True, related_name='discounts', to='products.product', verbose_name='products')),
            ],
            options={
                'verbose_name': 'product discount',
                'verbose_name_plural': 'product discounts',
            },
        ),
    ]
