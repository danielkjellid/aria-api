# Generated by Django 4.0.6 on 2022-08-19 12:17

import django.db.models.manager
from django.db import migrations, models

import mptt.fields

import aria.core.fields
import aria.core.utils


class Migration(migrations.Migration):

    replaces = [('products', '0001_initial'), ('products', '0002_alter_product_new_materials'), ('products', '0003_product_categories'), ('products', '0004_alter_product_new_materials'), ('products', '0005_auto_20220427_2123'), ('products', '0006_auto_20220507_2202'), ('products', '0007_alter_product_materials_alter_product_slug'), ('products', '0008_remove_product_sites_product_can_be_picked_up_and_more')]

    initial = True

    dependencies = [
        ('suppliers', '0001_initial'),
        ('categories', '0002_alter_category_parent'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('color_hex', models.CharField(max_length=7, unique=True, verbose_name='Color code')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('thumbnail', models.ImageField(blank=True, help_text='Image must be above 380x575px', upload_to=aria.files.utils.asset_get_static_upload_path)),
                ('name', models.CharField(max_length=255, verbose_name='Product name')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Hidden'), (3, 'Available'), (4, 'Discontinued')], default=1, verbose_name='Status')),
                ('slug', models.SlugField(help_text='A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.', max_length=255, verbose_name='Slug')),
                ('search_keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search keywords')),
                ('short_description', models.TextField(help_text='The short description will be displayed on the top part of the product, above the variant selection', null=True, verbose_name='Short Description')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('new_description', models.TextField(verbose_name='New description')),
                ('unit', models.IntegerField(choices=[(1, 'm2'), (2, 'stk')], default=1, verbose_name='Unit')),
                ('vat_rate', models.FloatField(default=0.25, verbose_name='VAT Rate')),
                ('available_in_special_sizes', models.BooleanField(default=False, help_text='Designates whether the product comes in sizes out of the ordinary', verbose_name='Available in special sizes')),
                ('styles', aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('classic', 'Klassisk'), ('concrete', 'Betong'), ('luxurious', 'Luksus'), ('marble', 'Marmor'), ('natural', 'Naturlig'), ('scandinavian', 'Skandinavisk'), ('structured', 'Strukturert'), ('woodenstructure', 'Trestruktur'), ('modern', 'Moderne'), ('circular', 'Rundt'), ('square', 'Firkantet'), ('oval', 'Ovalt'), ('mirrorwithlight', 'Speil med lys'), ('industrial', 'Industriell')], max_length=50), help_text='Which style the product line represent. Want to add more options? Reach out to Daniel.', null=True, size=None)),
                ('applications', aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('ceiling', 'Tak'), ('floor', 'Gulv'), ('table', 'Bord'), ('outdoors', 'Utendørs'), ('sink', 'Vask'), ('walls', 'Vegger')], max_length=50), help_text='Area of product usage. Want to add more options? Reach out to Daniel.', null=True, size=None)),
                ('materials', aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('ceramic', 'Keramikk'), ('metal', 'Metall'), ('porcelain', 'Porselen'), ('wood', 'Tre'), ('oak', 'Eik'), ('mdf', 'MDF'), ('laminate', 'Laminat'), ('teak', 'Teak'), ('mirror', 'Speil'), ('brushedsteel', 'Pusset stål'), ('stainlesssteel', 'Rustfritt stål'), ('composite', 'Kompositt')], max_length=50), help_text='Material product is made of. Want to add more options? Reach out to Daniel.', null=True, size=None)),
                ('new_materials', aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('kompositt', 'Kompositt'), ('rustfritt stål', 'Rustfritt stål'), ('pusset stål', 'Pusset stål'), ('tre', 'Tre'), ('laminat', 'Laminat'), ('glass', 'Glass'), ('marmor', 'Marmor')], max_length=50), help_text='Material product is made of. Want to add more options? Reach out to Daniel.', null=True, size=None)),
                ('rooms', aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('badrom', 'Bad'), ('kjøkken', 'Kjøkken'), ('stue gang oppholdsrom', 'Stue, gang og oppholdsrom'), ('uterom', 'Uterom')], max_length=50), help_text='Rooms applicable to product.', null=True, size=None)),
                ('absorption', models.FloatField(blank=True, null=True)),
                ('is_imported_from_external_source', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'permissions': (('has_products_list', 'Can list products'), ('has_product_edit', 'Can edit a single product instance'), ('has_product_add', 'Can add a single product instance'), ('has_product_delete', 'Can delete a single product instance')),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('file', models.FileField(upload_to=aria.files.utils.asset_get_static_upload_path, verbose_name='File')),
                ('name', models.CharField(max_length=255, verbose_name='Product file name')),
            ],
            options={
                'verbose_name': 'Product file',
                'verbose_name_plural': 'Product files',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='media/front/default_2048x1150.jpeg', upload_to=aria.files.utils.asset_get_static_upload_path, verbose_name='Image')),
                ('apply_filter', models.BooleanField(default=False, help_text='Apply filter to image if the image is light to maintain an acceptable contrast', verbose_name='Apply filter')),
            ],
            options={
                'verbose_name': 'Product image',
                'verbose_name_plural': 'Product images',
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('gross_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Hidden'), (3, 'Available'), (4, 'Discontinued')], default=3, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Product option',
                'verbose_name_plural': 'Product options',
            },
        ),
        migrations.CreateModel(
            name='ProductSiteState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('gross_price', models.FloatField(verbose_name='Gross price')),
                ('display_price', models.BooleanField(default=True, help_text='Designates whether the product price is displayed', verbose_name='Display price to customer')),
                ('can_be_purchased_online', models.BooleanField(default=False, help_text='Designates whether the product can be purchased and shipped', verbose_name='Can be purchased online')),
                ('can_be_picked_up', models.BooleanField(default=False, help_text='Designates whether the product can be purchased and picked up in store', verbose_name='Can be picked up')),
                ('supplier_purchase_price', models.FloatField(default=0.0, verbose_name='Supplier purchase price')),
                ('supplier_shipping_cost', models.FloatField(default=0.0, verbose_name='Shipping cost')),
            ],
            options={
                'verbose_name': 'Product site state',
                'verbose_name_plural': 'Product site states',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Shape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='media/front/default_2048x1150.jpeg', upload_to=aria.files.utils.asset_get_static_upload_path, verbose_name='Image')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Shape',
                'verbose_name_plural': 'Shapes',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(blank=True, decimal_places=2, help_text='width in centimeters', max_digits=6, null=True, verbose_name='width')),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='height in centimeters', max_digits=6, null=True, verbose_name='height')),
                ('depth', models.DecimalField(blank=True, decimal_places=2, help_text='depth in centimeters', max_digits=6, null=True, verbose_name='depth')),
                ('circumference', models.DecimalField(blank=True, decimal_places=2, help_text='circumference in centimeters', max_digits=6, null=True, verbose_name='circumference')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
                'ordering': ['width', 'height', 'depth', 'circumference'],
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.ImageField(blank=True, help_text='Image must be above 380x575px', upload_to=aria.files.utils.asset_get_static_upload_path)),
                ('name', models.CharField(max_length=255, verbose_name='Product variant name')),
                ('is_standard', models.BooleanField(default=False, help_text='designates if a variant should be treated as standard. This is to avoid multiple instances of the same variant. This field will also prevent cleanup deletion of these models.', verbose_name='standard')),
            ],
            options={
                'verbose_name': 'Variant',
                'verbose_name_plural': 'Variants',
            },
        ),
        migrations.AddConstraint(
            model_name='size',
            constraint=models.UniqueConstraint(fields=('width', 'height', 'depth', 'circumference'), name='size_combo_unique'),
        ),
        migrations.AddField(
            model_name='productsitestate',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_states', to='products.product'),
        ),
        migrations.AddField(
            model_name='productoption',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='products.product'),
        ),
        migrations.AddField(
            model_name='productoption',
            name='size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_options', to='products.size'),
        ),
        migrations.AddField(
            model_name='productoption',
            name='variant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_options', to='products.variant'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product'),
        ),
        migrations.AddField(
            model_name='productfile',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='products.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(related_name='products', to='products.color'),
        ),
        migrations.AddField(
            model_name='product',
            name='shapes',
            field=models.ManyToManyField(blank=True, related_name='products', to='products.shape'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='suppliers.supplier'),
        ),
        migrations.AddConstraint(
            model_name='productoption',
            constraint=models.UniqueConstraint(fields=('product', 'variant', 'size'), name='one_option_combo_per_variant_size'),
        ),
        migrations.AlterField(
            model_name='product',
            name='new_materials',
            field=aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('kompositt', 'Kompositt'), ('rustfritt stål', 'Rustfritt stål'), ('pusset stål', 'Pusset stål'), ('metall', 'Metall'), ('tre', 'Tre'), ('laminat', 'Laminat'), ('glass', 'Glass'), ('marmor', 'Marmor')], max_length=50), help_text='Material product is made of. Want to add more options? Reach out to Daniel.', null=True, size=None),
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=mptt.fields.TreeManyToManyField(related_name='products', to='categories.category'),
        ),
        migrations.AlterField(
            model_name='product',
            name='new_materials',
            field=aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('kompositt', 'Kompositt'), ('dado kvarts', 'DADOkvarts'), ('rustfritt stål', 'Rustfritt stål'), ('pusset stål', 'Pusset stål'), ('metall', 'Metall'), ('tre', 'Tre'), ('laminat', 'Laminat'), ('glass', 'Glass'), ('marmor', 'Marmor')], max_length=50), help_text='Material product is made of. Want to add more options? Reach out to Daniel.', null=True, size=None),
        ),
        migrations.AlterModelManagers(
            name='product',
            managers=[
            ],
        ),
        migrations.RemoveField(
            model_name='product',
            name='applications',
        ),
        migrations.RemoveField(
            model_name='product',
            name='new_materials',
        ),
        migrations.RemoveField(
            model_name='product',
            name='styles',
        ),
        migrations.AlterField(
            model_name='color',
            name='color_hex',
            field=models.CharField(max_length=7, unique=True, verbose_name='color code'),
        ),
        migrations.AlterField(
            model_name='color',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='available_in_special_sizes',
            field=models.BooleanField(default=False, help_text='Designates whether the product comes in sizes out of the ordinary', verbose_name='available in special sizes'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='materials',
            field=aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('kompositt', 'Kompositt'), ('dado kvarts', 'DADOkvarts'), ('rustfritt stål', 'Rustfritt stål'), ('pusset stål', 'Pusset stål'), ('metall', 'Metall'), ('tre', 'Tre'), ('laminat', 'Laminat'), ('glass', 'Glass'), ('marmor', 'Marmor')], max_length=50), help_text='Material product is made of. Want to add more options? Reach out to Daniel.', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=255, verbose_name='product name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='new_description',
            field=models.TextField(verbose_name='new description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='search_keywords',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='search keywords'),
        ),
        migrations.AlterField(
            model_name='product',
            name='short_description',
            field=models.TextField(help_text='The short description will be displayed on the top part of the product, above the variant selection', null=True, verbose_name='short description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='slug',
            field=models.SlugField(help_text='A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.', max_length=255, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='product',
            name='status',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Hidden'), (3, 'Available'), (4, 'Discontinued')], default=1, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='product',
            name='unit',
            field=models.IntegerField(choices=[(1, 'm2'), (2, 'stk')], default=1, verbose_name='unit'),
        ),
        migrations.AlterField(
            model_name='product',
            name='vat_rate',
            field=models.FloatField(default=0.25, verbose_name='VAT rate'),
        ),
        migrations.AlterField(
            model_name='productfile',
            name='name',
            field=models.CharField(max_length=255, verbose_name='product file name'),
        ),
        migrations.AlterField(
            model_name='productoption',
            name='status',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Hidden'), (3, 'Available'), (4, 'Discontinued')], default=3, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='shape',
            name='name',
            field=models.CharField(max_length=30, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='size',
            name='circumference',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Circumference in centimeters', max_digits=6, null=True, verbose_name='circumference'),
        ),
        migrations.AlterField(
            model_name='size',
            name='depth',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Depth in centimeters', max_digits=6, null=True, verbose_name='depth'),
        ),
        migrations.AlterField(
            model_name='size',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Height in centimeters', max_digits=6, null=True, verbose_name='height'),
        ),
        migrations.AlterField(
            model_name='size',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Width in centimeters', max_digits=6, null=True, verbose_name='width'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='is_standard',
            field=models.BooleanField(default=False, help_text='Designates if a variant should be treated as standard. This is to avoid multiple instances of the same variant. This field will also prevent cleanup deletion of these models.', verbose_name='standard'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='name',
            field=models.CharField(max_length=255, verbose_name='product variant name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='thumbnail',
            field=models.ImageField(blank=True, help_text='Image must be above 380x575px', upload_to=aria.files.utils.asset_get_static_upload_path),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='image',
            field=models.ImageField(blank=True, upload_to=aria.files.utils.asset_get_static_upload_path, verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='shape',
            name='image',
            field=models.ImageField(blank=True, upload_to=aria.files.utils.asset_get_static_upload_path, verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='thumbnail',
            field=models.ImageField(blank=True, help_text='Image must be above 380x575px', upload_to=aria.files.utils.asset_get_static_upload_path),
        ),
        migrations.AlterField(
            model_name='product',
            name='materials',
            field=aria.core.fields.ChoiceArrayField(base_field=models.CharField(choices=[('kompositt', 'Kompositt'), ('dado kvarts', 'DADOkvarts'), ('rustfritt stål', 'Rustfritt stål'), ('pusset stål', 'Pusset stål'), ('metall', 'Metall'), ('tre', 'Tre'), ('laminat', 'Laminat'), ('glass', 'Glass'), ('marmor', 'Marmor')], max_length=50), help_text=('Material product is made of. Want to add more options? Reach out to Daniel.',), null=True, size=None),
        ),
        migrations.AlterField(
            model_name='product',
            name='slug',
            field=models.SlugField(help_text=('A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.',), max_length=255, verbose_name='slug'),
        ),
        migrations.AddField(
            model_name='product',
            name='can_be_picked_up',
            field=models.BooleanField(default=False, help_text='Designates whether the product can be purchased and picked up in store', verbose_name='can be picked up'),
        ),
        migrations.AddField(
            model_name='product',
            name='can_be_purchased_online',
            field=models.BooleanField(default=False, help_text='Designates whether the product can be purchased and shipped', verbose_name='can be purchased online'),
        ),
        migrations.AddField(
            model_name='product',
            name='display_price',
            field=models.BooleanField(default=True, help_text='Designates whether the product price is displayed', verbose_name='display price to customer'),
        ),
        migrations.DeleteModel(
            name='ProductSiteState',
        ),
    ]
