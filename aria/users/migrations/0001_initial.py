# Generated by Django 3.2.12 on 2022-04-14 07:40

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('avatar_color', models.CharField(choices=[('#F87171', 'Red'), ('#FBBF24', 'Yellow'), ('#34D399', 'Green'), ('#60A5FA', 'Blue'), ('#A78BFA', 'Purple'), ('#F472B6', 'Pink')], max_length=8)),
                ('phone_number', models.CharField(max_length=30)),
                ('has_confirmed_email', models.BooleanField(default=False)),
                ('street_address', models.CharField(max_length=255)),
                ('zip_code', models.CharField(max_length=20)),
                ('zip_place', models.CharField(max_length=255)),
                ('disabled_emails', models.BooleanField(default=False, help_text='Decides if a user receives email from us. Typically used if we do not want a user to receive marketing (competetors).')),
                ('subscribed_to_newsletter', models.BooleanField(default=True, help_text='Decides if a user receives marketing emails from us.')),
                ('allow_personalization', models.BooleanField(default=True, help_text='Decides if a user accepts a personalized experience within the app.')),
                ('allow_third_party_personalization', models.BooleanField(default=True, help_text='Decides if we share user cookies with external sources such as Facebook. This will make the user see adverts and other related content to the app.')),
                ('acquisition_source', models.CharField(blank=True, max_length=255, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts if you want to preserve the data.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates whether the user is automatically granted all permissions.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'permissions': (('has_users_list', 'Can list users'), ('has_user_edit', 'Can edit a single user instance'), ('has_user_add', 'Can add a single user instance'), ('has_user_delete', 'Can delete a single user instance')),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
