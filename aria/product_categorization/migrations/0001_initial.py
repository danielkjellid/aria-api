# Generated by Django 3.0.7 on 2021-10-17 16:54

import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import aria.product_categorization.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    state_operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Category name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.",
                        verbose_name="Slug",
                    ),
                ),
                (
                    "ordering",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=0,
                        help_text="Order  in which the category should be displayed.",
                        verbose_name="Order",
                    ),
                ),
                (
                    "width",
                    models.CharField(
                        blank=True,
                        choices=[("full", "Fullwidth"), ("half", "Half")],
                        default="full",
                        max_length=4,
                        null=True,
                        verbose_name="Width",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Category image, should only be used on top level parents!",
                        null=True,
                        upload_to="some/category/path/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "apply_filter",
                    models.BooleanField(
                        default=False,
                        help_text="Apply filter to image if the image is light to maintain an acceptable contrast",
                        verbose_name="Apply filter",
                    ),
                ),
                (
                    "display_in_navbar",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the category should be displayed in the nav dropdown.",
                        verbose_name="Display in navigation bar",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the category should be treated as active.",
                        verbose_name="Active",
                    ),
                ),
                (
                    "sites",
                    models.ManyToManyField(
                        blank=True, related_name="categories", to="sites.Site"
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("on_site", django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Category name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.",
                        verbose_name="Slug",
                    ),
                ),
                (
                    "ordering",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=0,
                        help_text="Order  in which the category should be displayed.",
                        verbose_name="Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the category should be treated as active.",
                        verbose_name="Active",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="product_categorization.Category",
                    ),
                ),
                (
                    "sites",
                    models.ManyToManyField(
                        blank=True, related_name="subcategories", to="sites.Site"
                    ),
                ),
            ],
            options={
                "verbose_name": "Subcategory",
                "verbose_name_plural": "Subcategories",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("on_site", django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]
