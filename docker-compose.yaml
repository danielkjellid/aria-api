version: "3"

volumes:
  postgres:
  thumbor_data:
    driver: local
  minio_data:
    driver: local

networks:
  app-to-app:
    driver: bridge

services:
  postgres:
    image: postgres:14.3
    environment:
      - POSTGRES_USER=aria
      - POSTGRES_PASSWORD=aria
      - POSTGRES_DB=aria
    command:
      # We do not need replication-level logging on dev setups
      - --wal_level=minimal
      - --max_wal_senders=0
      #  Double the default value to help index builds
      - --maintenance_work_mem=131072
    volumes:
        - postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  redis:
    image: redis:7.0.1-alpine
    ports:
      - 6379:6379

  thumbor:
    image: beeyev/thumbor-s3:7.1-slim-alpine
    restart: unless-stopped
    tty: true
    ports:
      - '8888:8888'
    environment:
      - AUTO_PNG_TO_JPG='True'
      - AUTO_WEBP='True'
      - ALLOW_OLD_URLS='False'
      - ALLOW_UNSAFE_URL='True'

      - AWS_LOADER_REGION_NAME=${AWS_REGION}
      - AWS_LOADER_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_LOADER_S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_LOADER_S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_LOADER_S3_ENDPOINT_URL=${AWS_ENDPOINT_URL}

      - AWS_RESULT_STORAGE_S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_RESULT_STORAGE_S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_RESULT_STORAGE_S3_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_RESULT_STORAGE_ROOT_PATH=rs
      - AWS_RESULT_STORAGE_BUCKET_NAME=${AWS_S3_IMG_CACHE_BUCKET_NAME}

      - LOG_LEVEL=info
      - LOADER=thumbor_aws.loader

      # Max AGE sent as a header for the image served by thumbor in seconds (86400 is a day of caching)
      - MAX_AGE=86400
      - MAX_WIDTH=2048
      - MAX_HEIGHT=1150

      - RESULT_STORAGE=thumbor_aws.result_storage
      # Expiration in seconds of generated images in the result storage. (2629746 is a month is seconds)
      - RESULT_STORAGE_EXPIRATION_SECONDS=2629746
      - RESULT_STORAGE_STORES_UNSAFE='False'

      - SECURITY_KEY=${THUMBOR_SECURITY_KEY}
      - SENTRY_DSN_URL=${SENTRY_DSN}

      - QUALITY=99
    depends_on:
      - minio-server
    volumes:
      - thumbor_data:/data
    networks:
      - app-to-app

  minio-server:
    image: bitnami/minio:latest
    restart: unless-stopped
    tty: true
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - MINIO_SERVER_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SERVER_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
#      - MINIO_DEFAULT_BUCKETS=${AWS_S3_BUCKET_NAME}:none,${AWS_S3_IMG_CACHE_BUCKET_NAME}:none
      - MINIO_BROWSER=on
      - CONSOLE_SECURE_TLS_REDIRECT=off
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
#      - './public/media:/media'
#      - './public/media:/data'
    networks:
      - app-to-app

  minio-client:
    image: minio/mc
    depends_on:
      - minio-server
    networks:
      - app-to-app
    volumes:
      - './public/media:/media'
    entrypoint: >
      /bin/sh -c "
        until (/usr/bin/mc config host add minio http://minio-server:9000 aria ariatestpassword) do echo '...waiting...' && sleep 1; done;
        /usr/bin/mc rm --recursive minio/test-bucket --force;
        /usr/bin/mc cp --recursive /media/. minio/test-bucket/;
        /usr/bin/mc mirror --watch /media/. minio/test-bucket/;
      "




