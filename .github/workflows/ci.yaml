name: CI

on: push

env:
  DJANGO_SETTINGS_MODULE: aria.settings

jobs:
  python-lint:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "black"
            check: black aria --check --config=pyproject.toml
          - name: "mypy"
            check: mypy aria
          - name: "flake8"
            check: flake8 aria
          - name: "isort"
            check: isort -c aria --check-only --diff
          - name: "pylint"
            check: pylint aria  --output-format=parseable --reports=no
    name: ${{ matrix.name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup project
        uses: ./github/actions/setup
      - run: poetry run ${{ matrix.check }}

  python-tests:
    name: tests
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:10
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: aria
          POSTGRES_USER: aria
          POSTGRES_PASSWORD: aria
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup project
        uses: ./github/actions/setup
      - name: Run tests
        run: poetry run pytest
        env:
          DATABASE_URL: postgresql://aria:aria@localhost:${{ job.services.postgres.ports[5432] }}/aria
          # PostgreSQL configuration, used by psql
          PGHOST: localhost
          PGUSER: aria
          PGPASSWORD: aria
          PGDATABASE: aria
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          CACHE_URL: redis://localhost:6379/

  python-missing-init:
    name: Missing __init__.py files
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Check for missing __init__.py files
        uses: ljodal/python-actions/check-for-missing-init@feature/check-for-missing-init
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          paths: aria

  python-translations:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "make messages"
            check: "python manage.py makemessages --locale=no"
          - name: "missing translations"
            check: "msgattrib --untranslated aria/locale/no/LC_MESSAGES/django.po"
          - name: "compile translations"
            check: "python manage.py compilemessages --locale=no"
    name: ${{ matrix.name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup project
        uses: ./github/actions/setup
      - run: poetry run ${{ matrix.check }}

  ci-done:
    # Gather job which deploy workflow can wait on.
    name: CI done
    needs:
    - python-lint
    - python-tests
    - python-translations
    runs-on: ubuntu-20.04
    steps:
      - run: echo "CI done!"