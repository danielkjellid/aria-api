---
name: CI

on:
  push:

env:
  DJANGO_SETTINGS_MODULE: aria.settings
  SECURE_PROXY_SSL_HEADER: HTTP_X_FORWARDED_PROTO,http

jobs:
  python-lint:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Python lint: black"
            check: black aria --check --config=pyproject.toml
          - name: "Python lint: flake8"
            check: flake8 aria
          - name: "Python lint: isort"
            check: isort -c aria --check-only --diff
    name: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2
      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            pip-${{ runner.os }}-
      - run: pip install poetry==1.1.10  poetry-core==1.0.6
      - name: Cache Python venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('.python-version', 'poetry.lock') }}
      - run: poetry install
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: poetry run ${{ matrix.check }}

  python-tests:
    name: Python tests
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:10
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: aria
          POSTGRES_USER: aria
          POSTGRES_PASSWORD: aria
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2
      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            pip-${{ runner.os }}-
      - run: pip install poetry==1.1.10  poetry-core==1.0.6
      - name: Cache Python venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('.python-version', 'poetry.lock') }}
      - run: poetry install
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Run tests
        run: poetry run pytest
        env:
          DATABASE_URL: postgresql://aria:aria@localhost:${{ job.services.postgres.ports[5432] }}/aria
          SECURE_PROXY_SSL_HEADER: HTTP_X_FORWARDED_PROTO,http
          # PostgreSQL configuration, used by psql
          PGHOST: localhost
          PGUSER: aria
          PGPASSWORD: aria
          PGDATABASE: aria
          PGPORT: ${{ job.services.postgres.ports[5432] }}